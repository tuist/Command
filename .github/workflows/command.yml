name: Command

on:
  push:
    branches:
      - main
  pull_request: {}

env:
  TUIST_CONFIG_TOKEN: ${{ secrets.TUIST_CONFIG_CLOUD_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

concurrency:
  group: command-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  build:
    name: "Release build on ${{ matrix.os }}"
    timeout-minutes: 10
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-15]
        swift: ["5.10"]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: SwiftyLab/setup-swift@latest
        if: runner.os == 'Linux' || runner.os == 'Windows'
        with:
          swift-version: ${{ matrix.swift }}
      - uses: jdx/mise-action@v2
        if: runner.os == 'Linux' || runner.os == 'macOS'
        with:
          experimental: true
      - name: Run
        if: runner.os == 'Linux' || runner.os == 'macOS'
        run: mise run build-spm
      - name: Run
        if: runner.os == 'Windows'
        run: swift build --product Command

  build_tuist:
    name: "Tuist build"
    timeout-minutes: 10
    runs-on: "macos-15"
    steps:
      - uses: actions/checkout@v4
      - uses: jdx/mise-action@v2
        with:
          experimental: true
      - name: Run
        run: |
          mise run install
          mise run build

  test:
    name: "Test on ${{ matrix.os }}"
    timeout-minutes: 10
    strategy:
      matrix:
        os: [macos-15, ubuntu-latest, windows-latest]
        swift: ["5.10"]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: SwiftyLab/setup-swift@latest
        if: runner.os == 'Linux' || runner.os == 'Windows'
        with:
          swift-version: ${{ matrix.swift }}
      - uses: jdx/mise-action@v2
        if: runner.os == 'Linux' || runner.os == 'macOS'
        with:
          experimental: true
      - name: Run
        if: runner.os == 'Linux' || runner.os == 'macOS'
        run: mise run test-spm
      - name: Run
        if: runner.os == 'Windows'
        run: swift test

  test_tuist:
    name: "Tuist test"
    timeout-minutes: 10
    runs-on: "macos-15"
    env:
      TUIST_CONFIG_TOKEN: ${{ secrets.TUIST_CONFIG_CLOUD_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - uses: jdx/mise-action@v2
        with:
          experimental: true
      - name: Run
        run: |
          mise run install
          mise run test

  lint:
    name: Lint
    timeout-minutes: 10
    runs-on: macos-15
    steps:
      - uses: actions/checkout@v4
      - uses: jdx/mise-action@v2
        with:
          experimental: true
      - name: Run
        run: mise run lint
